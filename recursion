/* My thoughts on how recursion works.
We start with (array, 0,6). 
low = 0, high = 6 
mid = 3 
left happens so it repeats, 
low = 0, high = 3 
mid = 1 
left happens, repeat, 
low = 0, high = 1 
mid = 0 
left, repeat, 
low = 0, high = 0 
prints, returns left 
left = 1 
right, repeat, 
low = 0?, high = 0?
and I get lost
*/

#include <stdio.h>

int main() {
    int array[] = {17,4,19,30,47,999,13};
    printf("%d\n", compute(array,0,6));
    return 0;
}

int compute(int array[],int low, int high) {

    printf("Calling compute(%d, %d)\n", low, high);

    if (low == high) {
        printf("Call compute(%d, %d) returns %d.\n", low, high, array[low]%3+1);
        return array[low]%3 + 1;
    }

    int mid = (low+high)/2;
    int left = compute(array, low, mid);
    int right = compute(array, mid+1, high);
    printf("Call compute(%d, %d) returns %d.\n", low, high, left*right);
    return left*right;
}
